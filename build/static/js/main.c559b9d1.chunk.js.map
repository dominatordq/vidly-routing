{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/listGroup.jsx","components/common/pagination.jsx","components/common/searchBox.jsx","services/movieService.js","services/genreService.js","utils/paginate.js","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","registerServiceWorker.js","index.js"],"names":["init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","endpoint","apiUrl","tokenKey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","Like","classes","liked","style","cursor","aria-hidden","MoviesTable","movie","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Fragment","LoginForm","username","location","window","from","pathname","Logout","register","RegisterForm","userService","ProtectedRoute","component","render","App","exact","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c559b9d1.chunk.js","sourcesContent":["// import * as Sentry from \"@sentry/react\";\r\n// import { Integrations } from \"@sentry/tracing\";\r\n\r\nfunction init() {\r\n    // Sentry.init({\r\n    //     dsn: \"https://f7b53fc8e07f4922ae97bc89563a4eea@o495707.ingest.sentry.io/5568930\",\r\n    //     autoSessionTracking: true,\r\n    //     integrations: [\r\n    //       new Integrations.BrowserTracing(),\r\n    //     ],\r\n      \r\n    //     // We recommend adjusting this value in production, or using tracesSampler\r\n    //     // for finer control\r\n    //     tracesSampleRate: 1.0,\r\n    // });\r\n}\r\n\r\nfunction log(error) {\r\n    console.error(error);\r\n    // Sentry.captureException(error);\r\n}\r\n\r\nexport default { init, log };","import axios from 'axios';\r\nimport logger from './logService'\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n  \r\n    if (!expectedError) {\r\n        logger.log(error);\r\n        toast.error('An unexpected error occurred.');\r\n    }\r\n  \r\n    return Promise.reject(error); // returns a rejected promise with the error\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt; // if user is logged in, they can edit movies\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n}","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst endpoint = apiUrl + '/auth';\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(endpoint, { email, password });\r\n    localStorage.setItem(tokenKey, jwt); // store json web token in local browser storage\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey);   // deletes token to log the user out\r\n}\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);  // gets the JWT from local storage\r\n        return jwtDecode(jwt);  // return the current user based on their JWT\r\n    }\r\n    catch (ex) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getJwt() {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser,\r\n    getJwt\r\n};","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport auth from \"../services/authService\";\nimport Table from \"./common/table\";\nimport Like from \"./common/like\";\n\nclass MoviesTable extends Component {\n  columns = [\n    { \n      path: \"title\", \n      label: \"Title\", \n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: movie => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      )\n    }\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: movie => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    )\n  } \n\n  // shows delete column if user is authorized, otherwise hides it\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = ({\n  items,\n  textProperty,\n  valueProperty,\n  selectedItem,\n  onItemSelect\n}) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from 'react'; \r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n    return ( \r\n        <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Search...\"\r\n            value={value}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n     );\r\n}\r\n \r\nexport default SearchBox;","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst endpoint = apiUrl + \"/movies\";\r\n\r\nfunction movieUrl(id) {  // helper function to get endpoint of a specific movie\r\n    return `${endpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n    return http.get(endpoint)\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n    return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n    if (movie._id) {\r\n        const body = {...movie};\r\n        delete body._id;    // makes it clear which id we're passing to rest api call (http)\r\n        return http.put(movieUrl(movie._id), body);\r\n    }\r\n\r\n    return http.post(endpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n    return http.delete(movieUrl(movieId));\r\n}\r\n\r\n","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nexport function getGenres() {\r\n    return http.get(`${apiUrl}/genres`);\r\n}\r\n  ","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport SearchBox from './common/searchBox';\nimport { Link } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { deleteMovie, getMovies } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    }\n    catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error('This movie has already been deleted.');\n\n        this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  }\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery) {\n      filtered = allMovies.filter(m => \n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase()) // check if any movie = the search query\n      );\n    }\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id)\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n    const { user } = this.props;  \n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\" style={{ cursor: 'pointer' }}>\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && <Link  // if an authorized user is logged in, then show New Movie button, otherwise hide it \n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                {...rest}\r\n                name={name}\r\n                id={name} \r\n                className=\"form-control\"\r\n            />\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest}) => {\r\n    return ( \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\" />\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div> }\r\n        </div>\r\n     );\r\n};\r\n \r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data: {},\r\n        errors: {}\r\n    };\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false }\r\n        const { error }= Joi.validate(this.state.data, this.schema, options);\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        for (let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n\r\n        return errors;\r\n    };\r\n    \r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] }\r\n        const {error} = Joi.validate(obj, schema);\r\n\r\n        return error ? error.details[0].message : null; // if an error exists, return the first error message\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault(); // prevent submission of form\r\n\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} }); // errors should never be null\r\n        if (errors) return;\r\n\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n\r\n        this.setState({ data, errors });\r\n    };\r\n\r\n    renderButton(label) {\r\n        return (\r\n            <button disabled={this.validate()} className=\"btn btn-primary\">\r\n                {label}\r\n            </button>\r\n        );\r\n    };\r\n\r\n    renderSelect(name, label, options) {\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <Select \r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                options={options}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderInput(name, label, type = 'text') {\r\n        const { data, errors } = this.state;\r\n\r\n        return (\r\n            <Input \r\n                type={type}\r\n                name={name} \r\n                value={data[name]}\r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    };\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getGenres } from '../services/genreService';\r\nimport { getMovie, saveMovie } from '../services/movieService';\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            title: \"\",\r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\"\r\n        },\r\n        genres: [],\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string().required().label(\"Title\"),\r\n        genreId: Joi.string().required().label(\"Genre\"),\r\n        numberInStock: Joi.number().required().min(0).max(250).label(\"Number in Stock\"),\r\n        dailyRentalRate: Joi.number().required().min(0).max(25).label(\"Daily Rental Rate\")\r\n    };\r\n\r\n    async populateGenres() {\r\n        const { data: genres } = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n\r\n    async populateMovie() {\r\n        try {\r\n            const movieId = this.props.match.params.id;\r\n            if (movieId === \"new\") return;\r\n\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) });\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                this.props.history.replace(\"/not-found\"); // replaces current route with not found route\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateGenres();\r\n        await this.populateMovie();\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        await saveMovie(this.state.data);\r\n\r\n        this.props.history.push(\"/movies\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie Form</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"title\", \"Title\")}\r\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\")}\r\n                    {this.renderInput(\"dailyRentalRate\", \"Daily Rental Rate\")}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default MovieForm;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return <h1>Customers</h1>;\r\n}\r\n \r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return <h1>Rentals</h1>;\r\n}\r\n \r\nexport default Rentals;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return <h1>Not Found</h1>;\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\"\r\n\r\nconst NavBar = ({ user }) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\r\n                <button \r\n                    className=\"navbar-toggler\" \r\n                    type=\"button\" \r\n                    data-bs-toggle=\"collapse\" \r\n                    data-bs-target=\"#navbarNavAltMarkup\" \r\n                    aria-controls=\"navbarNavAltMarkup\" \r\n                    aria-expanded=\"false\" \r\n                    aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div className=\"navbar-nav\">\r\n                        <NavLink className=\"nav-link\" to=\"/movies\">Movies</NavLink>\r\n                        <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\r\n                        <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\r\n                        {!user && \r\n                            <React.Fragment>\r\n                                <NavLink className=\"nav-link\" to=\"/login\">\r\n                                    Login\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/register\">\r\n                                    Register\r\n                                </NavLink>\r\n                            </React.Fragment>\r\n                        }\r\n                        {user && \r\n                            <React.Fragment>\r\n                                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                                    {user.name}\r\n                                </NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                                    Logout\r\n                                </NavLink>\r\n                            </React.Fragment>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form {\r\n    // username = React.createRef();\r\n    state = {\r\n        data: { username: '', password: '' },\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n    };\r\n    \r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;  \r\n            await auth.login(data.username, data.password); // get the json web token\r\n            // this.props.history.push('/');\r\n\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : '/';  // reload either at the current location or home page\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = {...this.state.errors};\r\n                errors.username = ex.response.data; // get the error from the server\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    render() { \r\n        if (auth.getCurrentUser()) return <Redirect to=\"/\" /> // if user is logged in and types the link to login page,\r\n                                                              // will automatically redirect to the homepage\r\n\r\n        return ( \r\n            <div>\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderButton(\"Login\")}\r\n                </form>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        auth.logout();\r\n        window.location = '/';\r\n    }\r\n\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import http from './httpService';\r\nimport { apiUrl } from '../config.json';\r\n\r\nconst endpoint = apiUrl + \"/users\";\r\n\r\nexport function register(user) {\r\n    return http.post(endpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        name: user.name\r\n    });\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport * as userService from '../services/userService';\r\nimport auth from '../services/authService';\r\n\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data: { username: '', password: '', name: '' },\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string().email().required().label('Username'),\r\n        password: Joi.string().min(5).required().label('Password'),\r\n        name: Joi.string().required().label('Name')\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            // Call the server\r\n            const response = await userService.register(this.state.data);\r\n            auth.loginWithJwt(response.headers['x-auth-token']);\r\n            window.location = '/';\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {  // the client does something wrong\r\n                const errors = {...this.state.errors};\r\n                errors.username = ex.response.data; // get the error from the server\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Register</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput(\"username\", \"Username\")}\r\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\r\n                    {this.renderInput(\"name\", \"Full Name\")}\r\n                    {this.renderButton(\"Register\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RegisterForm;","import React from 'react';\r\nimport auth from \"../../services/authService\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n    return ( \r\n        <Route\r\n              {...rest}\r\n              render={props => {\r\n                if (!auth.getCurrentUser()) return <Redirect to={{ // cannot access unless user is logged in\r\n                    pathname: '/login',\r\n                    state: { from: props.location } // keep reference of location before being redirected to login\r\n                }} /> \r\n                return Component ? <Component {...props} /> : render(props); // either return a Component or render the props\r\n              }}>\r\n        </Route>\r\n     );\r\n}\r\n \r\nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from './components/movies';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport Logout from './components/logout';\nimport RegisterForm from './components/registerForm';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm}></ProtectedRoute>\n            <Route \n              path=\"/movies\" \n              render={props => <Movies {...props} user={this.state.user} />}>\n            </Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>  \n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}